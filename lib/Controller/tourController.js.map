{"version":3,"sources":["../../src/Controller/tourController.js"],"names":["fs","require","Tour","exports","getAllTour","req","res","status","json","getTourById","console","log","params","id","createTour","updateTour","data","tour","removeTour"],"mappings":";;AAAA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA;AACA,IAAMC,OAAOD,QAAQ,4BAAR,CAAb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAE,QAAQC,UAAR,GAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACjCA,MAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAQ;AACR;AACA;AACA;AACA;AALmB,GAArB;AAOD,CARD;;AAUA;AACAJ,QAAQM,WAAR,GAAsB,UAACJ,GAAD,EAAMC,GAAN,EAAc;AAClCI,UAAQC,GAAR,CAAYN,IAAIO,MAAhB;AACA,MAAMC,KAAKR,IAAIO,MAAJ,CAAWC,EAAX,GAAgB,CAA3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACA,CAXD;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,QAAQW,UAAR,GAAqB,UAACT,GAAD,EAAMC,GAAN,EAAc;AAC/B;AACA;AACFA,MAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACfD,YAAQ;AACR;AACA;AACA;AAJe,GAArB;AAMG,CATL;AAUE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF;AACAJ,QAAQY,UAAR,GAAqB,UAACV,GAAD,EAAMC,GAAN,EAAc;AACjCA,MAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAQ,SADW;AAEnBS,UAAM;AACJC,YAAM;AADF;AAFa,GAArB;AAMD,CAPD;;AASA;AACAd,QAAQe,UAAR,GAAqB,UAACb,GAAD,EAAMC,GAAN,EAAc;;AAEjC;AACA;AACA;AACA;AACAA,MAAIC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,YAAQ,SADW;AAEnBS,UAAM;AAFa,GAArB;AAID,CAVD","file":"tourController.js","sourcesContent":["const fs = require('fs');\r\n// import fs from 'fs'\r\nconst Tour = require('../../src/Models/tourModel');\r\n\r\n//ROUTE HANDLERS\r\n// exports.checkID = (req,res,next,val)=>{\r\n//     console.log(`Tour id is : ${val}`);\r\n//   if (req.params.id * 1 > tours.length) {\r\n//     return res.status(404).json({\r\n//       status: 'fail',\r\n//       message: 'Invalid ID',\r\n//     });\r\n//   }\r\n//   next();\r\n// }//checkID is invalid ---instead of using MongoDB\r\n\r\n// exports.checkBody=(req,res,next)=>{\r\n//     if(!req.body.name || !req.body.price){\r\n//       return res.status(400).json({\r\n//         status:'fail',\r\n//         message:'missing name or price'\r\n//       })\r\n//     }\r\n//     next()\r\n// }  //validate the body --  handled by mongoose \r\n//GET ALL TOUR\r\nexports.getAllTour = (req, res) => {\r\n  res.status(200).json({\r\n    status: 'success',\r\n    // results: tours.length,\r\n    // data: {\r\n    //   tours,\r\n    // },\r\n  });\r\n};\r\n\r\n//GET TOUR by Id\r\nexports.getTourById = (req, res) => {\r\n  console.log(req.params);\r\n  const id = req.params.id * 1;\r\n  // const tour = tours.find((el) => el.id === id);\r\n  // res.status(200).json({\r\n  //   status: 'success',\r\n  //   //result: tours.length,\r\n  //   data: {\r\n  //     tour,\r\n  //   },\r\n // });\r\n};\r\n\r\n//POST TOUR\r\n// exports.createTour = async(req, res) => {\r\n//   try{\r\n//     //const newTour = new Tour({})\r\n//     // newTour.save()\r\n//     const newTour = await Tour.create(req.body)\r\n//   res.status(201).json({\r\n//         status: 'success',\r\n//         data: {\r\n//           tour: newTour,\r\n//         },\r\n//       });\r\n    \r\n//   } catch(err){\r\n//        res.status(400).json({\r\n//         status:'fail',\r\n//         message:err\r\n//        })\r\n//   }\r\n// }\r\nexports.createTour = (req, res) => {\r\n    //const newTour = new Tour({})\r\n    // newTour.save()\r\n  res.status(201).json({\r\n        status: 'success',\r\n        // data: {\r\n        //   tour: newTour,\r\n        // },\r\n      });\r\n    }\r\n  //console.log(req.body);\r\n  // const newId = tours[tours.length - 1].id + 1;\r\n  // const newTour = Object.assign({ id: newId }, req.body);\r\n  // tours.push(newTour);\r\n  // fs.writeFile(\r\n  //   `${__dirname}/../dev-data/data/tours-simple.json`,\r\n  //   JSON.stringify(tours),\r\n  //   (err) => {\r\n  //     res.status(201).json({\r\n  //       status: 'success',\r\n  //       data: {\r\n  //         tour: newTour,\r\n  //       },\r\n  //     });\r\n  //   }\r\n  // );\r\n  //  res.send('Done');\r\n\r\n// PATCH / PUT TOUR\r\nexports.updateTour = (req, res) => {\r\n  res.status(200).json({\r\n    status: 'success',\r\n    data: {\r\n      tour: '<Updated tour here....!>',\r\n    },\r\n  });\r\n};\r\n\r\n//DELETE TOUR\r\nexports.removeTour = (req, res) => {\r\n  \r\n  //   res.status(200).json({\r\n  //   status: 'success',\r\n  //   data: null\r\n  //   });\r\n  res.status(204).json({\r\n    status: 'success',\r\n    data: null,\r\n  });\r\n};\r\n"]}